"use strict";(self.webpackChunk_betterdiscord_docs=self.webpackChunk_betterdiscord_docs||[]).push([[6274],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(n),m=i,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,s(s({ref:t},u),{},{components:n})):r.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6646:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:3,description:"The development environment."},s="Environment",a={unversionedId:"plugins/introduction/environment",id:"plugins/introduction/environment",title:"Environment",description:"The development environment.",source:"@site/docs/plugins/introduction/environment.md",sourceDirName:"plugins/introduction",slug:"/plugins/introduction/environment",permalink:"/plugins/introduction/environment",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"The development environment."},sidebar:"pluginsSidebar",previous:{title:"Quick Start",permalink:"/plugins/introduction/quick-start"},next:{title:"Plugin Structure",permalink:"/plugins/introduction/structure"}},l={},c=[{value:"Node.js",id:"nodejs",level:2},{value:"Plugin API",id:"plugin-api",level:2},{value:"Discord&#39;s Internals",id:"discords-internals",level:2}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"environment"},"Environment"),(0,i.kt)("p",null,"This section expands upon the general environment info"),(0,i.kt)("h2",{id:"nodejs"},"Node.js"),(0,i.kt)("p",null,"BetterDiscord gives plugins access to the ",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/"},"Node.js")," bundled into the Discord desktop application. This means anything you can do with Node.js can be done inside of a plugin. There are some caveats, especially when it comes to using modules from the ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"npm")," ecosystem because Electron applications require many packages to be compiled specifically for use with Electron and for that specific platform/OS."),(0,i.kt)("p",null,"The standard library of Node.js is fully available inside of BetterDiscord. For instance, if you want to load a file in the current directory you can just use the ",(0,i.kt)("inlineCode",{parentName:"p"},"fs")," module."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const fs = require("fs");\nconst myData = fs.readFileSync("myfile.txt", "utf8");\n')),(0,i.kt)("p",null,"Though this guide won't be giving a tutorial on the Node.js standard library--their official docs do that--you will see example usages throughout."),(0,i.kt)("h2",{id:"plugin-api"},"Plugin API"),(0,i.kt)("p",null,"BetterDiscord provides an API for plugins. The guides here show how it's used and the ",(0,i.kt)("a",{parentName:"p",href:"/api/"},"API reference")," section has an exhaustive list of what's available. The API exists as a global and provides several utility functions relevant to plugins. This includes data storage, UI rendering, notifications, and utilities to explore Discord's internals."),(0,i.kt)("h2",{id:"discords-internals"},"Discord's Internals"),(0,i.kt)("p",null,"Inside of this environment, BetterDiscord provides access to Discord's internals via searching their modules. Understanding and using these modules is a task left to the developer. But the ",(0,i.kt)("a",{parentName:"p",href:"../advanced/"},"advanced")," guide provides some insight on how to get started. Searching through and using Discord's own modules are some of the most important skills for building complex plugins."))}d.isMDXComponent=!0}}]);